{"version":3,"sources":["api/api.js","components/PokemonCards/PokemonCards.jsx","components/PokemonList/PokemonList.jsx","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","pokemon","limit","getChunkOfPokemon","count","fetch","then","response","json","serverResponse","results","PokemonCards","url","name","useState","setPokemon","useEffect","pokemonUrl","console","log","types","sprites","class","className","style","width","src","front_default","alt","map","ability","type","role","PokemonList","pokemons","loadMore","onClick","App","state","setState","this","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAAMA,G,MAAW,wBACXC,EAAU,kBACVC,EAAQ,UAEP,SAASC,IAA+B,IAAbC,EAAY,uDAAJ,GACxC,OAAOC,MAAM,GAAD,OAAIL,GAAJ,OAAeC,GAAf,OAAyBC,GAAzB,OAAiCE,IAC1CE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAc,OAAIA,EAAeC,SAAWD,K,0BCHzCE,EAAe,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,KAClC,EAA8BC,mBAAS,IAAvC,mBAAOb,EAAP,KAAgBc,EAAhB,KAEAC,qBAAU,WDGL,IAAwBC,KCFZL,EDGVP,MAAMY,GACVX,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WCHxBF,MAAK,SAAAL,GACJc,EAAWd,MAGbiB,QAAQC,IAAI,yBACd,IAEF,IAAQC,EAAmBnB,EAAnBmB,MAAOC,EAAYpB,EAAZoB,QACf,IAAKD,EACH,OACE,8BACE,sBAAME,MAAM,kBAAZ,0BASN,OACE,mCACIrB,EAIA,sBAAKsB,UAAU,OAAOC,MAVX,CACfC,MAAO,SASH,UACE,qBACEC,IAAKL,EAAQM,cACbJ,UAAU,eACVK,IAAG,kBAAaf,KAElB,sBAAKU,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BV,IAC3BO,EAAMS,KAAI,SAAAC,GAAO,OAChB,mBAAGP,UAAU,kBAAb,SAAgCO,EAAQC,KAAKlB,UAE/C,mBAAGU,UAAU,YAAb,2BAdJ,qBAAKA,UAAU,2BAA2BS,KAAK,SAA/C,SACE,sBAAMT,UAAU,kBAAhB,6BC9BGU,EAAc,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAEtC,OACE,qCACE,6BACGD,EAASL,KAAI,SAAC5B,GAAD,OACZ,6BACE,cAAC,EAAD,CAAcW,IAAKX,EAAQW,IAAKC,KAAMZ,EAAQY,QADvCZ,EAAQW,UAKrB,wBACEmB,KAAK,SACLlB,KAAK,WACLuB,QAASD,EAHX,2BCkCSE,EA3Cf,4MACEC,MAAQ,CACNJ,SAAU,GACV9B,MAAO,IAHX,EAgBE+B,SAAW,WACThC,EAAkB,EAAKmC,MAAMlC,OAC1BE,MAAK,SAAA4B,GACJ,EAAKK,SAAS,CACZL,SAAUA,EACV9B,MAAO,EAAKkC,MAAMlC,MAAQ,SArBpC,uDAME,WAAqB,IAAD,OAClBD,IACGG,MAAK,SAAA4B,GACJ,EAAKK,SAAS,CAAEL,gBAElBhB,QAAQC,IAAI,qBAXlB,oBA8BE,WACE,OACE,sBAAKI,UAAU,MAAf,UACE,yCACA,cAAC,EAAD,CACEW,SAAUM,KAAKF,MAAMJ,SACrBC,SAAUK,KAAKL,kBApCzB,GAAyBM,IAAMC,WCOhBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvC,MAAK,YAAkD,IAA/CwC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0b63c830.chunk.js","sourcesContent":["const BASE_URL = ' https://pokeapi.co/';\nconst pokemon = 'api/v2/pokemon/';\nconst limit = '?limit='\n\nexport function getChunkOfPokemon(count = 12) {\n  return fetch(`${BASE_URL}${pokemon}${limit}${count}`)\n    .then(response => response.json())\n    .then(serverResponse => serverResponse.results || serverResponse)\n}\n\nexport function getPokemonInfo(pokemonUrl) {\n  return fetch(pokemonUrl)\n    .then(response => response.json())\n}\n","import React, { useState, useEffect } from 'react';\nimport { getPokemonInfo } from '../../api/api';\nimport './PokemonCards.css'\n\nexport const PokemonCards = ({ url, name }) => {\n  const [pokemon, setPokemon] = useState({});\n\n  useEffect(() => {\n    getPokemonInfo(url)\n      .then(pokemon => {\n        setPokemon(pokemon)\n        // console.log(pokemon);\n      })\n      console.log('load pokemon by url');\n  },[]);\n\n  const { types, sprites } = pokemon;\n  if (!types) {\n    return(\n      <div>\n        <span class=\"visually-hidden\">Loading...</span>\n      </div>\n    )\n  }\n\n  const divStyle = {\n    width: '14rem',\n  };\n\n  return(\n    <>\n      {!pokemon\n      ? <div className=\"spinner-border text-info\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      : <div className=\"card\" style={divStyle}>\n          <img\n            src={sprites.front_default}\n            className=\"card-img-top\"\n            alt={`pokemon ${name}`}\n          />\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{name}</h5>\n            {types.map(ability => (\n              <p className=\"btn btn-primary\">{ability.type.name}</p>\n            ))}\n            <p className=\"card-text\">content</p>\n          </div>\n        </div>}\n    </>\n  )\n}","import React from 'react';\nimport { PokemonCards } from '../PokemonCards/PokemonCards';\n\nexport const PokemonList = ({ pokemons, loadMore }) => {\n\n  return(\n    <>\n      <ul>\n        {pokemons.map((pokemon) => (\n          <li key={pokemon.url}>\n            <PokemonCards url={pokemon.url} name={pokemon.name} />\n          </li>\n        ))}\n      </ul>\n      <button\n        type='button'\n        name='loadMore'\n        onClick={loadMore}\n      >\n        Load More\n      </button>\n    </>\n  )\n}","import './App.css';\nimport React from 'react';\nimport { getChunkOfPokemon } from './api/api';\nimport { PokemonList } from './components/PokemonList/';\n\nexport class App extends React.Component {\n  state = {\n    pokemons: [],\n    count: 24,\n  }\n\n  componentDidMount() {\n    getChunkOfPokemon() \n      .then(pokemons => {\n        this.setState({ pokemons });\n      })\n      console.log('pokemons loaded');\n  }\n\n  \n\n  loadMore = () => {\n    getChunkOfPokemon(this.state.count)\n      .then(pokemons => {\n        this.setState({\n          pokemons: pokemons,\n          count: this.state.count + 12,\n        })\n      })\n\n      // this.setState({\n      //   count: count + count,\n      // })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Pokedex</h1>\n        <PokemonList\n          pokemons={this.state.pokemons}\n          loadMore={this.loadMore}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}