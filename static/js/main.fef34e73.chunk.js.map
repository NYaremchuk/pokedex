{"version":3,"sources":["api/api.js","components/PokemonCards/PokemonCards.jsx","components/PokemonList/PokemonList.jsx","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","pokemon","limit","getChunkOfPokemon","count","fetch","then","response","json","serverResponse","results","PokemonCards","url","name","useState","setPokemon","useEffect","pokemonUrl","console","log","types","PokemonList","pokemons","loadMore","map","type","onClick","App","state","setState","className","this","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAAMA,G,MAAW,wBACXC,EAAU,kBACVC,EAAQ,UAEP,SAASC,IAA+B,IAAbC,EAAY,uDAAJ,GACxC,OAAOC,MAAM,GAAD,OAAIL,GAAJ,OAAeC,GAAf,OAAyBC,GAAzB,OAAiCE,IAC1CE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAc,OAAIA,EAAeC,SAAWD,K,kBCJzCE,EAAe,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,KAClC,EAA8BC,mBAAS,IAAvC,mBAAOb,EAAP,KAAgBc,EAAhB,KAEAC,qBAAU,WDIL,IAAwBC,KCHZL,EDIVP,MAAMY,GACVX,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WCJxBF,MAAK,SAAAL,GACJc,EAAWd,GACXiB,QAAQC,IAAIlB,EAAQmB,UAEtBF,QAAQC,IAAI,yBACd,IAEgBlB,EAAVmB,MAER,OACE,mCACE,8BACE,4BAAIP,SCjBCQ,EAAc,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAEtC,OACE,qCACE,6BACGD,EAASE,KAAI,SAACvB,GAAD,OACZ,6BACE,cAAC,EAAD,CAAcW,IAAKX,EAAQW,IAAKC,KAAMZ,EAAQY,QADvCZ,EAAQW,UAKrB,wBACEa,KAAK,SACLZ,KAAK,WACLa,QAASH,EAHX,2BCkCSI,EA3Cf,4MACEC,MAAQ,CACNN,SAAU,GACVlB,MAAO,IAHX,EAgBEmB,SAAW,WACTpB,EAAkB,EAAKyB,MAAMxB,OAC1BE,MAAK,SAAAgB,GACJ,EAAKO,SAAS,CACZP,SAAUA,EACVlB,MAAO,EAAKwB,MAAMxB,MAAQ,SArBpC,uDAME,WAAqB,IAAD,OAClBD,IACGG,MAAK,SAAAgB,GACJ,EAAKO,SAAS,CAAEP,gBAElBJ,QAAQC,IAAI,qBAXlB,oBA8BE,WACE,OACE,sBAAKW,UAAU,MAAf,UACE,yCACA,cAAC,EAAD,CACER,SAAUS,KAAKH,MAAMN,SACrBC,SAAUQ,KAAKR,kBApCzB,GAAyBS,IAAMC,WCOhBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fef34e73.chunk.js","sourcesContent":["const BASE_URL = ' https://pokeapi.co/';\nconst pokemon = 'api/v2/pokemon/';\nconst limit = '?limit='\n\nexport function getChunkOfPokemon(count = 12) {\n  return fetch(`${BASE_URL}${pokemon}${limit}${count}`)\n    .then(response => response.json())\n    .then(serverResponse => serverResponse.results || serverResponse)\n}\n\nexport function getPokemonInfo(pokemonUrl) {\n  return fetch(pokemonUrl)\n    .then(response => response.json())\n}\n","import React, { useState, useEffect } from 'react';\nimport { getPokemonInfo } from '../../api/api';\n\nexport const PokemonCards = ({ url, name }) => {\n  const [pokemon, setPokemon] = useState({});\n\n  useEffect(() => {\n    getPokemonInfo(url)\n      .then(pokemon => {\n        setPokemon(pokemon)\n        console.log(pokemon.types);\n      })\n      console.log('load pokemon by url');\n  },[]);\n\n  const { types } = pokemon;\n\n  return(\n    <>\n      <div>\n        <p>{name}</p>\n        {/* {types.map(ability => {\n            <p>{ability.type.name}</p>\n        })} */}\n      </div>\n    </>\n  )\n}","import React from 'react';\nimport { PokemonCards } from '../PokemonCards/PokemonCards';\n\nexport const PokemonList = ({ pokemons, loadMore }) => {\n\n  return(\n    <>\n      <ul>\n        {pokemons.map((pokemon) => (\n          <li key={pokemon.url}>\n            <PokemonCards url={pokemon.url} name={pokemon.name} />\n          </li>\n        ))}\n      </ul>\n      <button\n        type='button'\n        name='loadMore'\n        onClick={loadMore}\n      >\n        Load More\n      </button>\n    </>\n  )\n}","import './App.css';\nimport React from 'react';\nimport { getChunkOfPokemon } from './api/api';\nimport { PokemonList } from './components/PokemonList/';\n\nexport class App extends React.Component {\n  state = {\n    pokemons: [],\n    count: 12,\n  }\n\n  componentDidMount() {\n    getChunkOfPokemon() \n      .then(pokemons => {\n        this.setState({ pokemons });\n      })\n      console.log('pokemons loaded');\n  }\n\n  \n\n  loadMore = () => {\n    getChunkOfPokemon(this.state.count)\n      .then(pokemons => {\n        this.setState({\n          pokemons: pokemons,\n          count: this.state.count + 12,\n        })\n      })\n\n      // this.setState({\n      //   count: count + count,\n      // })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Pokedex</h1>\n        <PokemonList\n          pokemons={this.state.pokemons}\n          loadMore={this.loadMore}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}